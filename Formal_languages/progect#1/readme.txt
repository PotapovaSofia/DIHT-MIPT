	Используем стек для разбора регулярного выражения в обратной польсой записи. Каждый раз при обработке операций по размеру стека будем определять, корретно ли регулярное выражение.
	В стеке будем хранить пару :
 - first - максимальная длина слова, соответствующего данному регулярному выражению, если оно полностью состоит из "х". Если выражение не соответствует этому, то это значение сделаем равным минус бесконечности, а если регуряное выражение  - это пустое слово "1", то она равна 0.
 - second - максимальный суффикс из "х", соответствующий данному регулярному выражению.
	Когда мы получаем на вход букву "a", "b" , "c", мы сравниваем ее с "x" и, если равна, то длина и максимального слова, и суффикса равны 1. Иначе - длина максимального слова будет равна минус бесконечности, а суффикс 0.
	Для операции "+" каждое из значений - максимум из слагаемых. 
	Для операции "." максимальная длина слова равна сумме двух максимальных длин членов операции, если оба из них >= 0; максимальный суффикс равен или старому суффиксу второго члена, или длине всего второго члена плюс максимальный суффикс первого члена.
	При операции "*" длина максимального суффикса останется без изменения, а максимального слова станет равна бесконечности, если до этого она была положительна, иначе - пусть будет равным 0. 
	По завершении обработки регулярного выражения наибольшее из длин - слова или суффикса - покажет, насколько длинный суффикс из повторяющихся букв "x" может содержаться в слове. Поэтому для определения, принадлежит ли суффикс с заданной длиной нашему языку, просто сравним полученную длину и исходную.  
